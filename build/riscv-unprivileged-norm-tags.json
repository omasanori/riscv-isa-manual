{
  "tags": {
    "norm:rv32i_xreg_sz": "For RV32I, the 32 x registers are each 32 bits wide,\ni.e., XLEN=32.",
    "norm:x0eq0": "Register x0 is hardwired with all bits equal to 0.",
    "norm:rv32i_rv64i_other_xregs": "General purpose registers x1-x31 hold values that various\ninstructions interpret as a collection of Boolean values, or as two's\ncomplement signed binary integers or unsigned binary integers.",
    "norm:pcreg_op": "There is one additional unprivileged register: the program counter pc\nholds the address of the current instruction.",
    "norm:taken_cti_misaligned_exc": "An instruction-address-misaligned exception is generated on a taken branch\nor unconditional jump if the target address is not IALIGN-bit aligned.\nThis exception is reported on the branch or jump instruction, not on the target instruction.",
    "norm:cond_br_no_ia_misaligned_exc_not_taken": "No instruction-address-misaligned exception is generated\nfor a conditional branch that is not taken.",
    "norm:imm_always_sex": "Except for the 5-bit immediates used in CSR instructions (&lt;&lt;csrinsts&gt;&gt;),\nimmediates are always sign-extended",
    "norm:addi_op": "ADDI adds the sign-extended 12-bit immediate to register rs1.",
    "norm:addi_overflow": "Arithmetic overflow is ignored and the result is simply the low XLEN bits of the result.",
    "norm:slti_sltiu_op": "SLTI (set less than immediate) places the value 1 in register rd if\nregister rs1 is less than the sign-extended immediate when both are\ntreated as signed numbers, else 0 is written to rd. SLTIU is similar\nbut compares the values as unsigned numbers (i.e., the immediate is\nfirst sign-extended to XLEN bits then treated as an unsigned number).",
    "norm:andi_ori_xori_op": "ANDI, ORI, XORI are logical operations that perform bitwise AND, OR, and\nXOR on register rs1 and the sign-extended 12-bit immediate and place\nthe result in rd.",
    "norm:slli_op": "SLLI is a logical left shift (zeros are shifted into the lower bits);",
    "norm:srli_op": "SRLI is a logical right shift (zeros are shifted into the upper bits);",
    "norm:srai_op": "SRAI is an arithmetic right shift (the original sign bit is copied into the vacated upper bits).",
    "norm:lui_op": "LUI places the 32-bit U-immediate value into the\ndestination register rd, filling in the lowest 12 bits with zeros.",
    "norm:auipc_op": "AUIPC forms a 32-bit offset from\nthe U-immediate, filling in the lowest 12 bits with zeros, adds this\noffset to the address of the AUIPC instruction, then places the result\nin register rd.",
    "norm:R-type_operands": "All operations read\nthe rs1 and rs2 registers as source operands and write the result into register rd.",
    "norm:add_op": "ADD performs the addition of rs1 and rs2.",
    "norm:sub_op": "SUB performs the subtraction of rs2 from rs1.",
    "norm:add_sub_overflow": "Overflows are ignored and the low XLEN bits of results are written to the destination rd.",
    "norm:slt_sltu_op": "SLT and SLTU perform signed and unsigned compares respectively, writing 1 to rd if\nrs1 &lt; rs2, 0 otherwise.",
    "norm:and_or_xor_op": "AND, OR, and XOR perform bitwise logical operations.",
    "norm:sll_srl_sra_op": "SLL, SRL, and SRA perform logical left, logical right, and arithmetic\nright shifts on the value in register rs1 by the shift amount held in\nthe lower 5 bits of register rs2.",
    "norm:no_cti_delay_slots": "Control transfer instructions in RV32I\ndo not have architecturally visible delay slots.",
    "norm:ia_fault_exc_on_target": "If an instruction access-fault or instruction page-fault exception\noccurs on the target of a jump or taken branch, the exception is\nreported on the target instruction, not on the jump or branch instruction.",
    "norm:jal_target": "The offset is sign-extended and added to the address of the jump instruction to\nform the jump target address.",
    "norm:jal_op": "JAL stores the address of the instruction\nfollowing the jump ('pc'+4) into register rd.",
    "norm:jalr_target": "The target address is obtained by adding the\nsign-extended 12-bit I-immediate to the register rs1, then setting the\nleast-significant bit of the result to zero.",
    "norm:jalr_op": "The address of the\ninstruction following the jump (pc+4) is written to register rd.",
    "norm:br_target": "The 12-bit B-immediate encodes signed offsets in multiples of 2 bytes. The offset\nis sign-extended and added to the address of the branch instruction to give the target address.",
    "norm:beq_bne_op": "BEQ and BNE take the branch if registers rs1 and rs2 are equal or unequal respectively.",
    "norm:blt_bltu_op": "BLT and BLTU take the branch if rs1 is less than rs2, using signed and\nunsigned comparison respectively.",
    "norm:bge_bgeu_op": "BGE and BGEU take the branch if rs1 is greater than or equal to rs2,\nusing signed and unsigned comparison respectively.",
    "norm:load_exc_x0": "Loads with a destination of\nx0 must still raise any exceptions and cause any other side effects\neven though the load value is discarded.",
    "norm:ENDIANNESS_LITTLE_OR_BIG": "The EEI will define whether the memory system is little-endian or big-endian.",
    "norm:ldst_endian_byte_invariant": "In RISC-V, endianness is byte-address invariant.",
    "norm:ldst_endian_byte_op": "In a system for which endianness is byte-address invariant, the\nfollowing property holds: if a byte is stored to memory at some address\nin some endianness, then a byte-sized load from that address in any\nendianness returns the stored value.",
    "norm:ldst_little_endian_op": "In a little-endian configuration, multibyte stores write the\nleast-significant register byte at the lowest memory byte address,\nfollowed by the other register bytes in ascending order of their\nsignificance. Loads similarly transfer the contents of the lesser memory\nbyte addresses to the less-significant register bytes.",
    "norm:ldst_big_endian_op": "In a big-endian configuration, multibyte stores write the\nmost-significant register byte at the lowest memory byte address,\nfollowed by the other register bytes in descending order of their\nsignificance. Loads similarly transfer the contents of the greater\nmemory byte addresses to the less-significant register bytes.",
    "norm:ldst_ea": "The effective address is obtained by adding register rs1 to the\nsign-extended 12-bit offset.",
    "norm:load_op": "Loads copy a value from memory to register rd.",
    "norm:store_op": "Stores copy the value in register rs2 to memory.",
    "norm:lw_op": "The LW instruction loads a 32-bit value from memory into rd.",
    "norm:lh_op": "LH loads a 16-bit value from memory, then sign-extends to 32-bits before storing\nin rd.",
    "norm:lhu_op": "LHU loads a 16-bit value from memory but then zero extends to\n32-bits before storing in rd.",
    "norm:lb_lbu_op": "LB and LBU are defined analogously for 8-bit values.",
    "norm:sw_sh_sb_op": "The SW, SH, and SB instructions store 32-bit, 16-bit, and\n8-bit values from the low bits of register rs2 to memory.",
    "norm:ldst_no_exc_aligned": "loads and stores whose effective addresses are\nnaturally aligned shall not raise an address-misaligned exception.",
    "norm:MISALIGNED_LDST_EEI_DEPENDENT_BEHAVIOR": "Loads and stores whose effective address is not naturally aligned to the\nreferenced datatype (i.e., the effective address is not divisible by the\nsize of the access in bytes) have behavior dependent on the EEI.",
    "norm:MISALIGNED_LDST_FULLY_HW_SUPPORTED": "misaligned loads and stores can be handled in hardware",
    "norm:MISALIGNED_LDST_INVISIBLE_TRAP": "via an invisible trap into the execution environment implementation",
    "norm:MISALIGNED_LDST_HW_OR_INVISIBLE_TRAP_FUNC_OF_ADDR": "combination of hardware and invisible trap depending on address.",
    "norm:MISALIGNED_LDST_FULLY_HW_SUPPORTED_OR_VISIBLE_TRAP": "loads and stores that are not naturally aligned\nmay either complete execution successfully or raise an exception.",
    "norm:ldst_addr_misaligned_or_access_fault_exc": "The exception raised can be either an\naddress-misaligned exception or an access-fault exception.\nFor a memory access that would otherwise be able\nto complete except for the misalignment, an access-fault exception can\nbe raised instead of an address-misaligned exception if the misaligned\naccess should not be emulated, e.g., if accesses to the memory region\nhave side effects.",
    "norm:MISALIGNED_LDST_CONTAINED_OR_FATAL_TRAP": "When an EEI does not guarantee misaligned loads and\nstores are handled invisibly, the EEI must define if exceptions caused\nby address misalignment result in a contained trap (allowing software\nrunning inside the execution environment to handle the trap) or a fatal\ntrap (terminating execution).",
    "norm:ldst_atomicity_for_aligned": "naturally aligned\nloads and stores are guaranteed to execute atomically",
    "norm:fence_op": "A FENCE\n(with fm=0000) orders all memory operations in its predecessor set\nbefore all memory operations in its successor set.",
    "norm:fence-tso_op": "FENCE.TSO orders\nall load operations in its predecessor set before all memory operations\nin its successor set, and all store operations in its predecessor set\nbefore all store operations in its successor set. This leaves non-AMO\nstore operations in the FENCE.TSO's predecessor set unordered with\nnon-AMO loads in its successor set.",
    "norm:fence-tso_ordering_rw_rw_ok": "Because FENCE RW,RW imposes a superset of the orderings that FENCE.TSO\nimposes, it is correct to ignore the fm field and implement FENCE.TSO as FENCE RW,RW.",
    "norm:fence_unused_flds_rsv": "The unused fields in the FENCE\ninstructions--rs1 and rd--are reserved\nfor finer-grain fences in future extensions. For forward compatibility,\nbase implementations shall ignore these fields",
    "norm:fence_cons_ok": "We chose a relaxed memory model to allow high performance from simple\nmachine implementations and from likely future coprocessor or\naccelerator extensions. We separate out I/O ordering from memory R/W\nordering to avoid unnecessary serialization within a device-driver hart\nand also to support alternative non-memory paths to control added\ncoprocessors or I/O devices. Simple implementations may additionally\nignore the predecessor and successor fields and always execute a\nconservative FENCE on all operations.",
    "norm:ecall_op": "The ECALL instruction is used to make a service request to the execution environment.",
    "norm:ebreak_op": "The EBREAK instruction is used to return control to a debugging environment.",
    "norm:fence_null_pred_succ_inter": "As another example, a FENCE instruction with a zero pred field and a\nzero fm field is a HINT; the succ, rs1, and rd fields encode the\narguments to the HINT. A simple implementation can simply execute the\nHINT as a FENCE that orders the null set of prior memory accesses before\nwhichever subsequent memory accesses are encoded in the succ field.\nSince the intersection of the predecessor and successor sets is null,\nthe instruction imposes no memory orderings, and so it has no\narchitecturally visible effect.",
    "norm:rv64i_xreg_sz": "RV64I widens the integer registers and supported user address space to\n64 bits (XLEN=64 in &lt;&lt;gprs&gt;&gt;).",
    "norm:rv64_w_sex": "These \"*W\"\ninstructions ignore the upper 32 bits of their inputs and always produce\n32-bit signed values, sign-extending them to 64 bits, i.e. bits XLEN-1\nthrough 31 are equal.",
    "norm:addiw_op": "ADDIW is an RV64I instruction that adds the sign-extended 12-bit\nimmediate to register rs1 and produces the proper sign extension of a\n32-bit result in rd.",
    "norm:addiw_overflow": "Overflows are ignored and the result is the low\n32 bits of the result sign-extended to 64 bits.",
    "norm:slliw_srliw_sraiw_op": "SLLIW, SRLIW, and SRAIW are RV64I-only instructions that are analogously\ndefined but operate on 32-bit values and sign-extend their 32-bit\nresults to 64 bits.",
    "norm:slliw_srliw_sraiw_imm5_rsv": "SLLIW, SRLIW, and SRAIW encodings with\nimm[5] &amp;#8800; 0 are reserved.",
    "norm:lui_op_rv64i": "LUI places the\n32-bit U-immediate into register rd, filling in the lowest 12 bits\nwith zeros. The 32-bit result is sign-extended to 64 bits.",
    "norm:auipc_op_rv64i": "AUIPC forms a 32-bit offset from the U-immediate, filling in the lowest\n12 bits with zeros, sign-extends the result to 64 bits, adds it to the\naddress of the AUIPC instruction, then places the result in register rd.",
    "norm:addw_subw_op": "ADDW and SUBW are RV64I-only instructions that are defined analogously\nto ADD and SUB but operate on 32-bit values and produce signed 32-bit results.",
    "norm:addw_subw_overflow": "Overflows are ignored, and the low 32-bits of the result is\nsign-extended to 64-bits and written to the destination register.",
    "norm:sll_srl_sra_sh_amt_rv64i": "In RV64I, only the low 6 bits of rs2 are considered\nfor the shift amount.",
    "norm:sllw_srlw_sraw_op": "SLLW, SRLW, and SRAW are RV64I-only instructions that are analogously\ndefined but operate on 32-bit values and sign-extend their 32-bit\nresults to 64 bits. The shift amount is given by rs2[4:0].",
    "norm:ld_op_rv64i": "The LD instruction loads a 64-bit value from memory into register rd\nfor RV64I.",
    "norm:lw_op_rv64i": "The LW instruction loads a 32-bit value from memory and sign-extends\nthis to 64 bits before storing it in register rd for RV64I.",
    "norm:lwu_op": "The LWU instruction, on the other hand, zero-extends the 32-bit value from\nmemory for RV64I.",
    "norm:lh_lhu_lb_lbu_op_rv64i": "LH and LHU are defined analogously for 16-bit values,\nas are LB and LBU for 8-bit values.",
    "norm:sd_sw_sh_sb_op_rv64i": "The SD, SW, SH, and SB instructions\nstore 64-bit, 32-bit, 16-bit, and 8-bit values from the low bits of\nregister rs2 to memory respectively.",
    "norm:mul_op": "MUL performs an XLEN-bit×XLEN-bit multiplication of\nrs1 by rs2 and places the lower XLEN bits in the destination\nregister.",
    "norm:mulh_mulhu_mulhsu_op": "MULH, MULHU, and MULHSU perform the same multiplication but\nreturn the upper XLEN bits of the full 2×XLEN-bit\nproduct, for signed×signed,\nunsigned×unsigned, and rs1×unsigned rs2 multiplication.",
    "norm:mulw_op": "MULW is an RV64 instruction that multiplies the lower 32 bits of the\nsource registers, placing the sign extension of the lower 32 bits of the\nresult into the destination register.",
    "norm:div_divu_op": "DIV and DIVU perform an XLEN bits by XLEN bits signed and unsigned\ninteger division of rs1 by rs2, rounding towards zero.",
    "norm:rem_remu_op": "REM and REMU\nprovide the remainder of the corresponding division operation.",
    "norm:rem_result_sign": "For REM,\nthe sign of a nonzero result equals the sign of the dividend.",
    "norm:divw_divuw_op": "DIVW and DIVUW are RV64 instructions that divide the lower 32 bits of\nrs1 by the lower 32 bits of rs2, treating them as signed and\nunsigned integers, placing the 32-bit quotient in rd,\nsign-extended to 64 bits.",
    "norm:remw_remuw_op": "REMW and REMUW are RV64 instructions that\nprovide the corresponding signed and unsigned remainder\noperations.",
    "norm:remw_remuw_result_sign": "BothREMW and REMUW always sign-extend the 32-bit result\nto 64 bits, including on a divide by zero.",
    "norm:div_by_zero": "The quotient of division by zero has all bits\nset",
    "norm:rem_by_zero": "the remainder of division by zero equals the dividend.",
    "norm:signed_div_overflow": "Signed division overflow occurs only when the most-negative integer is divided\nby image:../../build/images-out/stem-52c1acbf19a35be815dca1fd989d89e4.svg[width=15,height=8]. The quotient of a signed division with overflow is\nequal to the dividend, and the remainder is zero.",
    "norm:Zilsd_reg_pairs": "Operands containing src for store instructions and dest for load instructions are held in aligned x-register pairs, i.e., register numbers must be even.",
    "norm:Zilsd_bits_to_pair": "Regardless of endianness, the lower-numbered register holds the\nlow-order bits, and the higher-numbered register holds the high-order\nbits: e.g., bits 31:0 of an operand in Zilsd might be held in register x14, with bits 63:32 of that operand held in x15.",
    "norm:Zilsd_align8_no_exc": "As the access size is 64-bit, accesses are only considered naturally aligned for effective addresses that are a multiple of 8.\nIn this case, these instructions are guaranteed to not raise an address-misaligned exception.",
    "norm:Zilsd_align8_atomic_unknown": "Even if naturally aligned, the memory access might not be performed atomically.",
    "norm:Zilsd_align4_atomic": "If the effective address is a multiple of 4, then each word access is required to be performed atomically.",
    "norm:Zilsd_ld_resume_trap": "To ensure resumable trap handling is possible for the load instructions, the base register must\nhave its original value if a trap is taken. The other register in the pair can have been updated.\nThis affects x2 for the stack pointer relative instruction and rs1 otherwise.",
    "norm:Zilsd_ld_x0": "LD instructions with destination x0 are processed as any other load, but the result is discarded entirely and x1 is not written.\nFor C.LDSP, usage of x0 as the destination is reserved.",
    "norm:Zilsd_sd_x0": "If using x0 as src of SD or C.SDSP, the entire 64-bit operand is zero — i.e., register x1 is not accessed.",
    "norm:Zilsd_RVWMO_exc_misaligned": "For the purposes of RVWMO and exception handling, LD and SD instructions are\nconsidered to be misaligned loads and stores",
    "norm:Zilsd_align4_two_4byte": "an LD or SD instruction whose effective address is a multiple of 4 gives rise\nto two 4-byte memory operations.",
    "norm:Zilsd_ld_op": "Loads a 64-bit value into registers rd and rd+1.\nThe effective address is obtained by adding register rs1 to the\nsign-extended 12-bit offset.",
    "norm:Zilsd_sd_op": "Stores a 64-bit value from registers rs2 and rs2+1.\nThe effective address is obtained by adding register rs1 to the\nsign-extended 12-bit offset.",
    "norm:c-ldsp_op": "Loads stack-pointer relative 64-bit value into registers rd' and rd'+1. It computes its effective address by adding the zero-extended offset, scaled by 8, to the stack pointer, x2. It expands to ld rd, offset(x2). C.LDSP is only valid when rd&#x2260;x0; the code points with rd=x0 are reserved.",
    "norm:c-sdsp_op": "Stores a stack-pointer relative 64-bit value from registers rs2' and rs2'+1. It computes an effective address by adding the zero-extended offset, scaled by 8, to the stack pointer, x2. It expands to sd rs2, offset(x2).",
    "norm:c-ld_op": "Loads a 64-bit value into registers rd' and rd'+1.\nIt computes an effective address by adding the zero-extended offset, scaled by 8, to the base address in register rs1'.",
    "norm:c-sd_op": "Stores a 64-bit value from registers rs2' and rs2'+1.\nIt computes an effective address by adding the zero-extended offset, scaled by 8, to the base address in register rs1'.\nIt expands to sd rs2', offset(rs1')."
  },
  "sections": {
    "title": "",
    "id": "",
    "children": [
      {
        "title": "Preface",
        "id": "_preface",
        "children": [

        ],
        "tags": [

        ]
      },
      {
        "title": "Introduction",
        "id": "_introduction",
        "children": [
          {
            "title": "RISC-V Hardware Platform Terminology",
            "id": "_risc_v_hardware_platform_terminology",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "RISC-V Software Execution Environments and Harts",
            "id": "_risc_v_software_execution_environments_and_harts",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "RISC-V ISA Overview",
            "id": "_risc_v_isa_overview",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Memory",
            "id": "_memory",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Base Instruction-Length Encoding",
            "id": "_base_instruction_length_encoding",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Exceptions, Traps, and Interrupts",
            "id": "trap-defn",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "UNSPECIFIED Behaviors and Values",
            "id": "_unspecified_behaviors_and_values",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "RV32I Base Integer Instruction Set, Version 2.1",
        "id": "rv32",
        "children": [
          {
            "title": "Programmers' Model for Base Integer ISA",
            "id": "_programmers_model_for_base_integer_isa",
            "children": [

            ],
            "tags": [
              "norm:rv32i_xreg_sz",
              "norm:x0eq0",
              "norm:rv32i_rv64i_other_xregs",
              "norm:pcreg_op"
            ]
          },
          {
            "title": "Base Instruction Formats",
            "id": "_base_instruction_formats",
            "children": [

            ],
            "tags": [
              "norm:taken_cti_misaligned_exc",
              "norm:cond_br_no_ia_misaligned_exc_not_taken",
              "norm:imm_always_sex"
            ]
          },
          {
            "title": "Immediate Encoding Variants",
            "id": "_immediate_encoding_variants",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Integer Computational Instructions",
            "id": "_integer_computational_instructions",
            "children": [
              {
                "title": "Integer Register-Immediate Instructions",
                "id": "_integer_register_immediate_instructions",
                "children": [

                ],
                "tags": [
                  "norm:addi_op",
                  "norm:addi_overflow",
                  "norm:slti_sltiu_op",
                  "norm:andi_ori_xori_op",
                  "norm:slli_op",
                  "norm:srli_op",
                  "norm:srai_op",
                  "norm:lui_op",
                  "norm:auipc_op"
                ]
              },
              {
                "title": "Integer Register-Register Operations",
                "id": "_integer_register_register_operations",
                "children": [

                ],
                "tags": [
                  "norm:R-type_operands",
                  "norm:add_op",
                  "norm:sub_op",
                  "norm:add_sub_overflow",
                  "norm:slt_sltu_op",
                  "norm:and_or_xor_op",
                  "norm:sll_srl_sra_op"
                ]
              },
              {
                "title": "NOP Instruction",
                "id": "_nop_instruction",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Control Transfer Instructions",
            "id": "_control_transfer_instructions",
            "children": [
              {
                "title": "Unconditional Jumps",
                "id": "_unconditional_jumps",
                "children": [

                ],
                "tags": [
                  "norm:jal_target",
                  "norm:jal_op",
                  "norm:jalr_target",
                  "norm:jalr_op"
                ]
              },
              {
                "title": "Conditional Branches",
                "id": "_conditional_branches",
                "children": [

                ],
                "tags": [
                  "norm:br_target",
                  "norm:beq_bne_op",
                  "norm:blt_bltu_op",
                  "norm:bge_bgeu_op"
                ]
              }
            ],
            "tags": [
              "norm:no_cti_delay_slots",
              "norm:ia_fault_exc_on_target"
            ]
          },
          {
            "title": "Load and Store Instructions",
            "id": "ldst",
            "children": [

            ],
            "tags": [
              "norm:load_exc_x0",
              "norm:ENDIANNESS_LITTLE_OR_BIG",
              "norm:ldst_endian_byte_invariant",
              "norm:ldst_endian_byte_op",
              "norm:ldst_little_endian_op",
              "norm:ldst_big_endian_op",
              "norm:ldst_ea",
              "norm:load_op",
              "norm:store_op",
              "norm:lw_op",
              "norm:lh_op",
              "norm:lhu_op",
              "norm:lb_lbu_op",
              "norm:sw_sh_sb_op",
              "norm:ldst_no_exc_aligned",
              "norm:MISALIGNED_LDST_EEI_DEPENDENT_BEHAVIOR",
              "norm:MISALIGNED_LDST_FULLY_HW_SUPPORTED",
              "norm:MISALIGNED_LDST_INVISIBLE_TRAP",
              "norm:MISALIGNED_LDST_HW_OR_INVISIBLE_TRAP_FUNC_OF_ADDR",
              "norm:MISALIGNED_LDST_FULLY_HW_SUPPORTED_OR_VISIBLE_TRAP",
              "norm:ldst_addr_misaligned_or_access_fault_exc",
              "norm:MISALIGNED_LDST_CONTAINED_OR_FATAL_TRAP",
              "norm:ldst_atomicity_for_aligned"
            ]
          },
          {
            "title": "Memory Ordering Instructions",
            "id": "fence",
            "children": [

            ],
            "tags": [
              "norm:fence_op",
              "norm:fence-tso_op",
              "norm:fence-tso_ordering_rw_rw_ok",
              "norm:fence_unused_flds_rsv",
              "norm:fence_cons_ok"
            ]
          },
          {
            "title": "Environment Call and Breakpoints",
            "id": "ecall-ebreak",
            "children": [

            ],
            "tags": [
              "norm:ecall_op",
              "norm:ebreak_op"
            ]
          },
          {
            "title": "HINT Instructions",
            "id": "_hint_instructions",
            "children": [

            ],
            "tags": [
              "norm:fence_null_pred_succ_inter"
            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "RV32E and RV64E Base Integer Instruction Sets, Version 2.0",
        "id": "rv32e",
        "children": [
          {
            "title": "RV32E and RV64E Programmers’ Model",
            "id": "_rv32e_and_rv64e_programmers_model",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "RV32E and RV64E Instruction Set Encoding",
            "id": "_rv32e_and_rv64e_instruction_set_encoding",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "RV64I Base Integer Instruction Set, Version 2.1",
        "id": "rv64",
        "children": [
          {
            "title": "Register State",
            "id": "_register_state",
            "children": [

            ],
            "tags": [
              "norm:rv64i_xreg_sz"
            ]
          },
          {
            "title": "Integer Computational Instructions",
            "id": "_integer_computational_instructions_2",
            "children": [
              {
                "title": "Integer Register-Immediate Instructions",
                "id": "_integer_register_immediate_instructions_2",
                "children": [

                ],
                "tags": [
                  "norm:addiw_op",
                  "norm:addiw_overflow",
                  "norm:slliw_srliw_sraiw_op",
                  "norm:slliw_srliw_sraiw_imm5_rsv",
                  "norm:lui_op_rv64i",
                  "norm:auipc_op_rv64i"
                ]
              },
              {
                "title": "Integer Register-Register Operations",
                "id": "_integer_register_register_operations_2",
                "children": [

                ],
                "tags": [
                  "norm:addw_subw_op",
                  "norm:addw_subw_overflow",
                  "norm:sll_srl_sra_sh_amt_rv64i",
                  "norm:sllw_srlw_sraw_op"
                ]
              }
            ],
            "tags": [
              "norm:rv64_w_sex"
            ]
          },
          {
            "title": "Load and Store Instructions",
            "id": "_load_and_store_instructions",
            "children": [

            ],
            "tags": [
              "norm:ld_op_rv64i",
              "norm:lw_op_rv64i",
              "norm:lwu_op",
              "norm:lh_lhu_lb_lbu_op_rv64i",
              "norm:sd_sw_sh_sb_op_rv64i"
            ]
          },
          {
            "title": "HINT Instructions",
            "id": "rv64i-hints",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"Zifencei\" Extension for Instruction-Fetch Fence, Version 2.0",
        "id": "zifencei",
        "children": [

        ],
        "tags": [

        ]
      },
      {
        "title": "\"Zicsr\", Extension for Control and Status Register (CSR) Instructions, Version 2.0",
        "id": "csrinsts",
        "children": [
          {
            "title": "CSR Instructions",
            "id": "_csr_instructions",
            "children": [
              {
                "title": "CSR Access Ordering",
                "id": "_csr_access_ordering",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"Zicntr\" and \"Zihpm\" Extensions for Counters, Version 2.0",
        "id": "counters",
        "children": [
          {
            "title": "\"Zicntr\" Extension for Base Counters and Timers",
            "id": "_zicntr_extension_for_base_counters_and_timers",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "\"Zihpm\" Extension for Hardware Performance Counters",
            "id": "_zihpm_extension_for_hardware_performance_counters",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"Zihintntl\" Extension for Non-Temporal Locality Hints, Version 1.0",
        "id": "chap:zihintntl",
        "children": [

        ],
        "tags": [

        ]
      },
      {
        "title": "\"Zihintpause\" Extension for Pause Hint, Version 2.0",
        "id": "zihintpause",
        "children": [

        ],
        "tags": [

        ]
      },
      {
        "title": "\"Zimop\" Extension for May-Be-Operations, Version 1.0",
        "id": "zimop",
        "children": [
          {
            "title": "\"Zcmop\" Compressed May-Be-Operations Extension, Version 1.0",
            "id": "_zcmop_compressed_may_be_operations_extension_version_1_0",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"Zicond\" Extension for Integer Conditional Operations, Version 1.0.0",
        "id": "Zicond",
        "children": [
          {
            "title": "Introduction",
            "id": "intro",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Zicond specification",
            "id": "_zicond_specification",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Instructions (in alphabetical order)",
            "id": "_instructions_in_alphabetical_order",
            "children": [
              {
                "title": "czero.eqz",
                "id": "insns-czero-eqz",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "czero.nez",
                "id": "insns-czero-nez",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Usage examples",
            "id": "_usage_examples",
            "children": [
              {
                "title": "Instruction sequences",
                "id": "_instruction_sequences",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"M\" Extension for Integer Multiplication and Division, Version 2.0",
        "id": "mstandard",
        "children": [
          {
            "title": "Multiplication Operations",
            "id": "_multiplication_operations",
            "children": [

            ],
            "tags": [
              "norm:mul_op",
              "norm:mulh_mulhu_mulhsu_op",
              "norm:mulw_op"
            ]
          },
          {
            "title": "Division Operations",
            "id": "_division_operations",
            "children": [

            ],
            "tags": [
              "norm:div_divu_op",
              "norm:rem_remu_op",
              "norm:rem_result_sign",
              "norm:divw_divuw_op",
              "norm:remw_remuw_op",
              "norm:remw_remuw_result_sign",
              "norm:div_by_zero",
              "norm:rem_by_zero",
              "norm:signed_div_overflow"
            ]
          },
          {
            "title": "Zmmul Extension, Version 1.0",
            "id": "_zmmul_extension_version_1_0",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"A\" Extension for Atomic Instructions, Version 2.1",
        "id": "atomics",
        "children": [
          {
            "title": "Specifying Ordering of Atomic Instructions",
            "id": "_specifying_ordering_of_atomic_instructions",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "\"Zalrsc\" Extension for Load-Reserved/Store-Conditional Instructions",
            "id": "sec:lrsc",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Eventual Success of Store-Conditional Instructions",
            "id": "sec:lrscseq",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "\"Zaamo\" Extension for Atomic Memory Operations",
            "id": "sec:amo",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"Zawrs\" Extension for Wait-on-Reservation-Set instructions, Version 1.01",
        "id": "_zawrs_extension_for_wait_on_reservation_set_instructions_version_1_01",
        "children": [
          {
            "title": "Wait-on-Reservation-Set Instructions",
            "id": "Zawrs",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"Zacas\" Extension for Atomic Compare-and-Swap (CAS) Instructions, Version 1.0.0",
        "id": "_zacas_extension_for_atomic_compare_and_swap_cas_instructions_version_1_0_0",
        "children": [
          {
            "title": "Word/Doubleword/Quadword CAS (AMOCAS.W/D/Q) Instructions",
            "id": "_worddoublewordquadword_cas_amocas_wdq_instructions",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Additional AMO PMAs",
            "id": "_additional_amo_pmas",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"Zabha\" Extension for Byte and Halfword Atomic Memory Operations, Version 1.0",
        "id": "_zabha_extension_for_byte_and_halfword_atomic_memory_operations_version_1_0",
        "children": [
          {
            "title": "Byte and Halfword Atomic Memory Operation Instructions",
            "id": "_byte_and_halfword_atomic_memory_operation_instructions",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "RVWMO Memory Consistency Model, Version 2.0",
        "id": "memorymodel",
        "children": [
          {
            "title": "Definition of the RVWMO Memory Model",
            "id": "rvwmo",
            "children": [
              {
                "title": "Memory Model Primitives",
                "id": "rvwmo-primitives",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Syntactic Dependencies",
                "id": "mem-dependencies",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Preserved Program Order",
                "id": "_preserved_program_order",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Memory Model Axioms",
                "id": "_memory_model_axioms",
                "children": [
                  {
                    "title": "Load Value Axiom",
                    "id": "ax-load",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Atomicity Axiom",
                    "id": "ax-atom",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Progress Axiom",
                    "id": "ax-prog",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "CSR Dependency Tracking Granularity",
            "id": "csr-granularity",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Source and Destination Register Listings",
            "id": "source-dest-regs",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"Ztso\" Extension for Total Store Ordering, Version 1.0",
        "id": "ztso",
        "children": [

        ],
        "tags": [

        ]
      },
      {
        "title": "\"CMO\" Extensions for Base Cache Management Operation ISA, Version 1.0.0",
        "id": "cmo",
        "children": [
          {
            "title": "Pseudocode for instruction semantics",
            "id": "_pseudocode_for_instruction_semantics",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Introduction",
            "id": "intro-cmo",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Background",
            "id": "background",
            "children": [
              {
                "title": "Memory and Caches",
                "id": "memory-caches",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Cache-Block Operations",
                "id": "_cache_block_operations",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Coherent Agents and Caches",
            "id": "coherent-agents-caches",
            "children": [
              {
                "title": "Memory Ordering",
                "id": "_memory_ordering",
                "children": [
                  {
                    "title": "Preserved Program Order",
                    "id": "_preserved_program_order_2",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Load Values",
                    "id": "_load_values",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              },
              {
                "title": "Traps",
                "id": "_traps",
                "children": [
                  {
                    "title": "Illegal-Instruction and Virtual-Instruction Exceptions",
                    "id": "_illegal_instruction_and_virtual_instruction_exceptions",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Page-Fault, Guest-Page-Fault, and Access-Fault Exceptions",
                    "id": "_page_fault_guest_page_fault_and_access_fault_exceptions",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Address-Misaligned Exceptions",
                    "id": "_address_misaligned_exceptions",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Breakpoint Exceptions and Debug Mode Entry",
                    "id": "_breakpoint_exceptions_and_debug_mode_entry",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Hypervisor Extension",
                    "id": "_hypervisor_extension",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              },
              {
                "title": "Effects on Constrained LR/SC Loops",
                "id": "_effects_on_constrained_lrsc_loops",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Software Discovery",
                "id": "_software_discovery",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Control and Status Register State",
            "id": "csr_state",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Extensions",
            "id": "extensions",
            "children": [
              {
                "title": "Cache-Block Management Instructions",
                "id": "Zicbom",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Cache-Block Zero Instructions",
                "id": "Zicboz",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Cache-Block Prefetch Instructions",
                "id": "Zicbop",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Instructions",
            "id": "insns",
            "children": [
              {
                "title": "cbo.clean",
                "id": "insns-cbo_clean",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "cbo.flush",
                "id": "insns-cbo_flush",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "cbo.inval",
                "id": "insns-cbo_inval",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "cbo.zero",
                "id": "insns-cbo_zero",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "prefetch.i",
                "id": "insns-prefetch_i",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "prefetch.r",
                "id": "insns-prefetch_r",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "prefetch.w",
                "id": "insns-prefetch_w",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"F\" Extension for Single-Precision Floating-Point, Version 2.2",
        "id": "single-float",
        "children": [
          {
            "title": "F Register State",
            "id": "_f_register_state",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Floating-Point Control and Status Register",
            "id": "_floating_point_control_and_status_register",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "NaN Generation and Propagation",
            "id": "_nan_generation_and_propagation",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Subnormal Arithmetic",
            "id": "_subnormal_arithmetic",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Single-Precision Load and Store Instructions",
            "id": "_single_precision_load_and_store_instructions",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Single-Precision Floating-Point Computational Instructions",
            "id": "single-float-compute",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Single-Precision Floating-Point Conversion and Move Instructions",
            "id": "_single_precision_floating_point_conversion_and_move_instructions",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Single-Precision Floating-Point Compare Instructions",
            "id": "_single_precision_floating_point_compare_instructions",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Single-Precision Floating-Point Classify Instruction",
            "id": "_single_precision_floating_point_classify_instruction",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"D\" Extension for Double-Precision Floating-Point, Version 2.2",
        "id": "_d_extension_for_double_precision_floating_point_version_2_2",
        "children": [
          {
            "title": "D Register State",
            "id": "_d_register_state",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "NaN Boxing of Narrower Values",
            "id": "nanboxing",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Double-Precision Load and Store Instructions",
            "id": "fld_fsd",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Double-Precision Floating-Point Computational Instructions",
            "id": "_double_precision_floating_point_computational_instructions",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Double-Precision Floating-Point Conversion and Move Instructions",
            "id": "fl-compute",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Double-Precision Floating-Point Compare Instructions",
            "id": "_double_precision_floating_point_compare_instructions",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Double-Precision Floating-Point Classify Instruction",
            "id": "fl-compare",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"Q\" Extension for Quad-Precision Floating-Point, Version 2.2",
        "id": "fl-class",
        "children": [
          {
            "title": "Quad-Precision Load and Store Instructions",
            "id": "_quad_precision_load_and_store_instructions",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Quad-Precision Computational Instructions",
            "id": "_quad_precision_computational_instructions",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Quad-Precision Convert and Move Instructions",
            "id": "quad-compute",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Quad-Precision Floating-Point Compare Instructions",
            "id": "_quad_precision_floating_point_compare_instructions",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Quad-Precision Floating-Point Classify Instruction",
            "id": "quad-float-compare",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"Zfh\" and \"Zfhmin\" Extensions for Half-Precision Floating-Point, Version 1.0",
        "id": "chap:zfh",
        "children": [
          {
            "title": "Half-Precision Load and Store Instructions",
            "id": "_half_precision_load_and_store_instructions",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Half-Precision Computational Instructions",
            "id": "_half_precision_computational_instructions",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Half-Precision Conversion and Move Instructions",
            "id": "_half_precision_conversion_and_move_instructions",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Half-Precision Floating-Point Compare Instructions",
            "id": "flt-pt-to-int-move",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Half-Precision Floating-Point Classify Instruction",
            "id": "half-pr-flt-pt-compare",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "\"Zfhmin\" Standard Extension for Minimal Half-Precision Floating-Point",
            "id": "half-pr-flt-class",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"BF16\" Extensions for BFloat16-precision Floating-Point, Version 1.0",
        "id": "bf16",
        "children": [
          {
            "title": "Introduction",
            "id": "BF16_introduction",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Intended Audience",
            "id": "BF16_audience",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Number Format",
            "id": "BF16_format",
            "children": [
              {
                "title": "BF16 Operand Format",
                "id": "_bf16_operand_format",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "BF16 Behavior",
                "id": "_bf16_behavior",
                "children": [
                  {
                    "title": "Subnormal Numbers:",
                    "id": "_subnormal_numbers",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Infinities:",
                    "id": "_infinities",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "NaNs",
                    "id": "_nans",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Scalar NaN Boxing",
                    "id": "_scalar_nan_boxing",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Rounding Modes:",
                    "id": "_rounding_modes",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Handling exceptions",
                    "id": "_handling_exceptions",
                    "children": [
                      {
                        "title": "Underflow",
                        "id": "_underflow",
                        "children": [

                        ],
                        "tags": [

                        ]
                      }
                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Extensions",
            "id": "BF16_extensions",
            "children": [
              {
                "title": "Zfbfmin - Scalar BF16 Converts",
                "id": "zfbfmin",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zvfbfmin - Vector BF16 Converts",
                "id": "zvfbfmin",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zvfbfwma - Vector BF16 widening mul-add",
                "id": "zvfbfwma",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Instructions",
            "id": "BF16_insns",
            "children": [
              {
                "title": "fcvt.bf16.s",
                "id": "insns-fcvt.bf16.s",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "fcvt.s.bf16",
                "id": "insns-fcvt.s.bf16",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vfncvtbf16.f.f.w",
                "id": "insns-vfncvtbf16.f.f.w",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vfwcvtbf16.f.f.v",
                "id": "insns-vfwcvtbf16.f.f.v",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vfwmaccbf16",
                "id": "insns-vfwmaccbf16",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Bibliography",
            "id": "_bibliography",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"Zfa\" Extension for Additional Floating-Point Instructions, Version 1.0",
        "id": "zfa",
        "children": [
          {
            "title": "Load-Immediate Instructions",
            "id": "_load_immediate_instructions",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Minimum and Maximum Instructions",
            "id": "_minimum_and_maximum_instructions",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Round-to-Integer Instructions",
            "id": "_round_to_integer_instructions",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Modular Convert-to-Integer Instruction",
            "id": "_modular_convert_to_integer_instruction",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Move Instructions",
            "id": "_move_instructions",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Comparison Instructions",
            "id": "_comparison_instructions",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"Zfinx\", \"Zdinx\", \"Zhinx\", \"Zhinxmin\" Extensions for Floating-Point in Integer Registers, Version 1.0",
        "id": "sec:zfinx",
        "children": [
          {
            "title": "Processing of Narrower Values",
            "id": "_processing_of_narrower_values",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Zdinx",
            "id": "_zdinx",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Processing of Wider Values",
            "id": "_processing_of_wider_values",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Zhinx",
            "id": "_zhinx",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Zhinxmin",
            "id": "_zhinxmin",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Privileged Architecture Implications",
            "id": "_privileged_architecture_implications",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"C\" Extension for Compressed Instructions, Version 2.0",
        "id": "compressed",
        "children": [
          {
            "title": "Overview",
            "id": "_overview",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Compressed Instruction Formats",
            "id": "_compressed_instruction_formats",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Load and Store Instructions",
            "id": "_load_and_store_instructions_2",
            "children": [
              {
                "title": "Stack-Pointer-Based Loads and Stores",
                "id": "_stack_pointer_based_loads_and_stores",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Register-Based Loads and Stores",
                "id": "_register_based_loads_and_stores",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Control Transfer Instructions",
            "id": "_control_transfer_instructions_2",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Integer Computational Instructions",
            "id": "_integer_computational_instructions_3",
            "children": [
              {
                "title": "Integer Constant-Generation Instructions",
                "id": "_integer_constant_generation_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Integer Register-Immediate Operations",
                "id": "_integer_register_immediate_operations",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Integer Register-Register Operations",
                "id": "_integer_register_register_operations_3",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Defined Illegal Instruction",
                "id": "_defined_illegal_instruction",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "NOP Instruction",
                "id": "_nop_instruction_2",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Breakpoint Instruction",
                "id": "_breakpoint_instruction",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Usage of C Instructions in LR/SC Sequences",
            "id": "_usage_of_c_instructions_in_lrsc_sequences",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "HINT Instructions",
            "id": "rvc-hints",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "RVC Instruction Set Listings",
            "id": "_rvc_instruction_set_listings",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"Zc*\" Extension for Code Size Reduction, Version 1.0.0",
        "id": "Zc",
        "children": [
          {
            "title": "Zc* Overview",
            "id": "_zc_overview",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "C",
            "id": "C",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Zce",
            "id": "_zce",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "MISA.C",
            "id": "misaC",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Zca",
            "id": "_zca",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Zcf (RV32 only)",
            "id": "_zcf_rv32_only",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Zcd",
            "id": "_zcd",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Zcb",
            "id": "_zcb",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Zcmp",
            "id": "Zcmp",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Zcmt",
            "id": "Zcmt",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Zc instruction formats",
            "id": "Zc_formats",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Zcb instructions",
            "id": "Zcb_instructions",
            "children": [
              {
                "title": "c.lbu",
                "id": "insns-c_lbu",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "c.lhu",
                "id": "insns-c_lhu",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "c.lh",
                "id": "insns-c_lh",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "c.sb",
                "id": "insns-c_sb",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "c.sh",
                "id": "insns-c_sh",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "c.zext.b",
                "id": "insns-c_zext_b",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "c.sext.b",
                "id": "insns-c_sext_b",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "c.zext.h",
                "id": "insns-c_zext_h",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "c.sext.h",
                "id": "insns-c_sext_h",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "c.zext.w",
                "id": "insns-c_zext_w",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "c.not",
                "id": "insns-c_not",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "c.mul",
                "id": "insns-c_mul",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "PUSH/POP register instructions",
            "id": "insns-pushpop",
            "children": [
              {
                "title": "PUSH/POP functional overview",
                "id": "_pushpop_functional_overview",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Example usage",
                "id": "_example_usage",
                "children": [
                  {
                    "title": "Stack pointer adjustment handling",
                    "id": "pushpop-areg-list",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Register list handling",
                    "id": "_register_list_handling",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              },
              {
                "title": "PUSH/POP Fault handling",
                "id": "pushpop-idempotent-memory",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Software view of execution",
                "id": "pushpop-software-view",
                "children": [
                  {
                    "title": "Software view of the PUSH sequence",
                    "id": "_software_view_of_the_push_sequence",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Software view of the POP/POPRET sequence",
                    "id": "_software_view_of_the_poppopret_sequence",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              },
              {
                "title": "Non-idempotent memory handling",
                "id": "pushpop_non-idem-mem",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Example RV32I PUSH/POP sequences",
                "id": "_example_rv32i_pushpop_sequences",
                "children": [
                  {
                    "title": "cm.push  {ra, s0-s2}, -64",
                    "id": "_cm_push_ra_s0_s2_64",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "cm.push {ra, s0-s11}, -112",
                    "id": "_cm_push_ra_s0_s11_112",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "cm.pop   {ra}, 16",
                    "id": "_cm_pop_ra_16",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "cm.pop {ra, s0-s3}, 48",
                    "id": "_cm_pop_ra_s0_s3_48",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "cm.pop {ra, s0-s4}, 64",
                    "id": "_cm_pop_ra_s0_s4_64",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              },
              {
                "title": "cm.push",
                "id": "insns-cm_push",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "cm.pop",
                "id": "insns-cm_pop",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "cm.popretz",
                "id": "insns-cm_popretz",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "cm.popret",
                "id": "insns-cm_popret",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "cm.mvsa01",
                "id": "insns-cm_mvsa01",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "cm.mva01s",
                "id": "insns-cm_mva01s",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Table Jump Overview",
            "id": "insns-tablejump",
            "children": [
              {
                "title": "jvt",
                "id": "_jvt",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Table Jump Fault handling",
                "id": "tablejump-fault-handling",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "jvt CSR",
                "id": "csrs-jvt",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "cm.jt",
                "id": "insns-cm_jt",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "cm.jalt",
                "id": "insns-cm_jalt",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"B\" Extension for Bit Manipulation, Version 1.0.0",
        "id": "bits",
        "children": [
          {
            "title": "Zb* Overview",
            "id": "preface",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Word Instructions",
            "id": "_word_instructions",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Pseudocode for instruction semantics",
            "id": "_pseudocode_for_instruction_semantics_2",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Extensions",
            "id": "_extensions",
            "children": [
              {
                "title": "Zba: Address generation",
                "id": "zba",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zbb: Basic bit-manipulation",
                "id": "zbb",
                "children": [
                  {
                    "title": "Logical with negate",
                    "id": "_logical_with_negate",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Count leading/trailing zero bits",
                    "id": "_count_leadingtrailing_zero_bits",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Count population",
                    "id": "_count_population",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Integer minimum/maximum",
                    "id": "_integer_minimummaximum",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Sign extension and zero extension",
                    "id": "_sign_extension_and_zero_extension",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Bitwise rotation",
                    "id": "_bitwise_rotation",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "OR Combine",
                    "id": "_or_combine",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Byte-reverse",
                    "id": "_byte_reverse",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              },
              {
                "title": "Zbc: Carry-less multiplication",
                "id": "zbc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zbs: Single-bit instructions",
                "id": "zbs",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zbkb: Bit-manipulation for Cryptography",
                "id": "zbkb",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zbkc: Carry-less multiplication for Cryptography",
                "id": "zbkc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zbkx: Crossbar permutations",
                "id": "zbkx",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Instructions (in alphabetical order)",
            "id": "insns-b",
            "children": [
              {
                "title": "add.uw",
                "id": "insns-add_uw",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "andn",
                "id": "insns-andn",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "bclr",
                "id": "insns-bclr",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "bclri",
                "id": "insns-bclri",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "bext",
                "id": "insns-bext",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "bexti",
                "id": "insns-bexti",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "binv",
                "id": "insns-binv",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "binvi",
                "id": "insns-binvi",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "bset",
                "id": "insns-bset",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "bseti",
                "id": "insns-bseti",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "clmul",
                "id": "insns-clmul",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "clmulh",
                "id": "insns-clmulh",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "clmulr",
                "id": "insns-clmulr",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "clz",
                "id": "insns-clz",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "clzw",
                "id": "insns-clzw",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "cpop",
                "id": "insns-cpop",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "cpopw",
                "id": "insns-cpopw",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "ctz",
                "id": "insns-ctz",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "ctzw",
                "id": "insns-ctzw",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "max",
                "id": "insns-max",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "maxu",
                "id": "insns-maxu",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "min",
                "id": "insns-min",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "minu",
                "id": "insns-minu",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "orc.b",
                "id": "insns-orc_b",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "orn",
                "id": "insns-orn",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "pack",
                "id": "insns-pack",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "packh",
                "id": "insns-packh",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "packw",
                "id": "insns-packw",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "rev8",
                "id": "insns-rev8",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "brev8",
                "id": "insns-brev8",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "rol",
                "id": "insns-rol",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "rolw",
                "id": "insns-rolw",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "ror",
                "id": "insns-ror",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "rori",
                "id": "insns-rori",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "roriw",
                "id": "insns-roriw",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "rorw",
                "id": "insns-rorw",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sext.b",
                "id": "insns-sext_b",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sext.h",
                "id": "insns-sext_h",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sh1add",
                "id": "insns-sh1add",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sh1add.uw",
                "id": "insns-sh1add_uw",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sh2add",
                "id": "insns-sh2add",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sh2add.uw",
                "id": "insns-sh2add_uw",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sh3add",
                "id": "insns-sh3add",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sh3add.uw",
                "id": "insns-sh3add_uw",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "slli.uw",
                "id": "insns-slli_uw",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "unzip",
                "id": "insns-unzip",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "xnor",
                "id": "insns-xnor",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "xperm8",
                "id": "insns-xperm8",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "xperm4",
                "id": "insns-xperm4",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "zext.h",
                "id": "insns-zext_h",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "zip",
                "id": "insns-zip",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Software optimization guide",
            "id": "_software_optimization_guide",
            "children": [
              {
                "title": "strlen",
                "id": "_strlen",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "strcmp",
                "id": "_strcmp",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"V\" Standard Extension for Vector Operations, Version 1.0",
        "id": "vector",
        "children": [
          {
            "title": "Introduction",
            "id": "_introduction_2",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Implementation-defined Constant Parameters",
            "id": "_implementation_defined_constant_parameters",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Vector Extension Programmer&#8217;s Model",
            "id": "_vector_extension_programmers_model",
            "children": [
              {
                "title": "Vector Registers",
                "id": "_vector_registers",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Context Status in mstatus",
                "id": "_vector_context_status_in_mstatus",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Context Status in vsstatus",
                "id": "_vector_context_status_in_vsstatus",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Type (vtype) Register",
                "id": "_vector_type_vtype_register",
                "children": [
                  {
                    "title": "Vector Selected Element Width (vsew[2:0])",
                    "id": "_vector_selected_element_width_vsew20",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Vector Register Grouping (vlmul[2:0])",
                    "id": "vector-register-grouping",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Vector Tail Agnostic and Vector Mask Agnostic vta and vma",
                    "id": "sec-agnostic",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Vector Type Illegal (vill)",
                    "id": "_vector_type_illegal_vill",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Length (vl) Register",
                "id": "_vector_length_vl_register",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Byte Length (vlenb) Register",
                "id": "_vector_byte_length_vlenb_register",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Start Index (vstart) Register",
                "id": "_vector_start_index_vstart_register",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Fixed-Point Rounding Mode (vxrm) Register",
                "id": "_vector_fixed_point_rounding_mode_vxrm_register",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Fixed-Point Saturation Flag (vxsat)",
                "id": "_vector_fixed_point_saturation_flag_vxsat",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Control and Status (vcsr) Register",
                "id": "_vector_control_and_status_vcsr_register",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "State of Vector Extension at Reset",
                "id": "_state_of_vector_extension_at_reset",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Mapping of Vector Elements to Vector Register State",
            "id": "_mapping_of_vector_elements_to_vector_register_state",
            "children": [
              {
                "title": "Mapping for LMUL = 1",
                "id": "_mapping_for_lmul_1",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Mapping for LMUL &lt; 1",
                "id": "_mapping_for_lmul_1_2",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Mapping for LMUL &gt; 1",
                "id": "_mapping_for_lmul_1_3",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Mapping across Mixed-Width Operations",
                "id": "sec-mapping-mixed",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Mask Register Layout",
                "id": "sec-mask-register-layout",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Vector Instruction Formats",
            "id": "_vector_instruction_formats",
            "children": [
              {
                "title": "Scalar Operands",
                "id": "_scalar_operands",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Operands",
                "id": "sec-vec-operands",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Masking",
                "id": "_vector_masking",
                "children": [
                  {
                    "title": "Mask Encoding",
                    "id": "sec-vector-mask-encoding",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              },
              {
                "title": "Prestart, Active, Inactive, Body, and Tail Element Definitions",
                "id": "sec-inactive-defs",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Configuration-Setting Instructions (vsetvli/vsetivli/vsetvl)",
            "id": "sec-vector-config",
            "children": [
              {
                "title": "vtype encoding",
                "id": "_vtype_encoding",
                "children": [
                  {
                    "title": "Unsupported vtype Values",
                    "id": "_unsupported_vtype_values",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              },
              {
                "title": "AVL encoding",
                "id": "_avl_encoding",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Constraints on Setting vl",
                "id": "constraints-on-setting-vl",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Example of strip mining and changes to SEW",
                "id": "example-stripmine-sew",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Vector Loads and Stores",
            "id": "sec-vector-memory",
            "children": [
              {
                "title": "Vector Load/Store Instruction Encoding",
                "id": "_vector_loadstore_instruction_encoding",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Load/Store Addressing Modes",
                "id": "_vector_loadstore_addressing_modes",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Load/Store Width Encoding",
                "id": "sec-vector-loadstore-width-encoding",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Unit-Stride Instructions",
                "id": "_vector_unit_stride_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Constant-Stride Instructions",
                "id": "_vector_constant_stride_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Indexed Instructions",
                "id": "_vector_indexed_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Unit-stride Fault-Only-First Loads",
                "id": "_unit_stride_fault_only_first_loads",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Load/Store Segment Instructions",
                "id": "sec-aos",
                "children": [
                  {
                    "title": "Vector Unit-Stride Segment Loads and Stores",
                    "id": "_vector_unit_stride_segment_loads_and_stores",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Vector Constant-Stride Segment Loads and Stores",
                    "id": "_vector_constant_stride_segment_loads_and_stores",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Vector Indexed Segment Loads and Stores",
                    "id": "_vector_indexed_segment_loads_and_stores",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Load/Store Whole Register Instructions",
                "id": "_vector_loadstore_whole_register_instructions",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Vector Memory Alignment Constraints",
            "id": "_vector_memory_alignment_constraints",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Vector Memory Consistency Model",
            "id": "_vector_memory_consistency_model",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Vector Arithmetic Instruction Formats",
            "id": "_vector_arithmetic_instruction_formats",
            "children": [
              {
                "title": "Vector Arithmetic Instruction encoding",
                "id": "sec-arithmetic-encoding",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Widening Vector Arithmetic Instructions",
                "id": "sec-widening",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Narrowing Vector Arithmetic Instructions",
                "id": "sec-narrowing",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Vector Integer Arithmetic Instructions",
            "id": "sec-vector-integer",
            "children": [
              {
                "title": "Vector Single-Width Integer Add and Subtract",
                "id": "_vector_single_width_integer_add_and_subtract",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Widening Integer Add/Subtract",
                "id": "_vector_widening_integer_addsubtract",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Integer Extension",
                "id": "_vector_integer_extension",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Integer Add-with-Carry / Subtract-with-Borrow Instructions",
                "id": "_vector_integer_add_with_carry_subtract_with_borrow_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Bitwise Logical Instructions",
                "id": "_vector_bitwise_logical_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Single-Width Shift Instructions",
                "id": "_vector_single_width_shift_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Narrowing Integer Right Shift Instructions",
                "id": "_vector_narrowing_integer_right_shift_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Integer Compare Instructions",
                "id": "_vector_integer_compare_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Integer Min/Max Instructions",
                "id": "_vector_integer_minmax_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Single-Width Integer Multiply Instructions",
                "id": "_vector_single_width_integer_multiply_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Integer Divide Instructions",
                "id": "_vector_integer_divide_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Widening Integer Multiply Instructions",
                "id": "_vector_widening_integer_multiply_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Single-Width Integer Multiply-Add Instructions",
                "id": "_vector_single_width_integer_multiply_add_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Widening Integer Multiply-Add Instructions",
                "id": "_vector_widening_integer_multiply_add_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Integer Merge Instructions",
                "id": "_vector_integer_merge_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Integer Move Instructions",
                "id": "_vector_integer_move_instructions",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Vector Fixed-Point Arithmetic Instructions",
            "id": "sec-vector-fixed-point",
            "children": [
              {
                "title": "Vector Single-Width Saturating Add and Subtract",
                "id": "_vector_single_width_saturating_add_and_subtract",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Single-Width Averaging Add and Subtract",
                "id": "_vector_single_width_averaging_add_and_subtract",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Single-Width Fractional Multiply with Rounding and Saturation",
                "id": "_vector_single_width_fractional_multiply_with_rounding_and_saturation",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Single-Width Scaling Shift Instructions",
                "id": "_vector_single_width_scaling_shift_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Narrowing Fixed-Point Clip Instructions",
                "id": "_vector_narrowing_fixed_point_clip_instructions",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Vector Floating-Point Instructions",
            "id": "sec-vector-float",
            "children": [
              {
                "title": "Vector Floating-Point Exception Flags",
                "id": "_vector_floating_point_exception_flags",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Single-Width Floating-Point Add/Subtract Instructions",
                "id": "_vector_single_width_floating_point_addsubtract_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Widening Floating-Point Add/Subtract Instructions",
                "id": "_vector_widening_floating_point_addsubtract_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Single-Width Floating-Point Multiply/Divide Instructions",
                "id": "_vector_single_width_floating_point_multiplydivide_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Widening Floating-Point Multiply",
                "id": "_vector_widening_floating_point_multiply",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Single-Width Floating-Point Fused Multiply-Add Instructions",
                "id": "_vector_single_width_floating_point_fused_multiply_add_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Widening Floating-Point Fused Multiply-Add Instructions",
                "id": "_vector_widening_floating_point_fused_multiply_add_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Floating-Point Square-Root Instruction",
                "id": "_vector_floating_point_square_root_instruction",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Floating-Point Reciprocal Square-Root Estimate Instruction",
                "id": "_vector_floating_point_reciprocal_square_root_estimate_instruction",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Floating-Point Reciprocal Estimate Instruction",
                "id": "_vector_floating_point_reciprocal_estimate_instruction",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Floating-Point MIN/MAX Instructions",
                "id": "_vector_floating_point_minmax_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Floating-Point Sign-Injection Instructions",
                "id": "_vector_floating_point_sign_injection_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Floating-Point Compare Instructions",
                "id": "_vector_floating_point_compare_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Floating-Point Classify Instruction",
                "id": "_vector_floating_point_classify_instruction",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Floating-Point Merge Instruction",
                "id": "_vector_floating_point_merge_instruction",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Floating-Point Move Instruction",
                "id": "_vector_floating_point_move_instruction",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Single-Width Floating-Point/Integer Type-Convert Instructions",
                "id": "_single_width_floating_pointinteger_type_convert_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Widening Floating-Point/Integer Type-Convert Instructions",
                "id": "_widening_floating_pointinteger_type_convert_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Narrowing Floating-Point/Integer Type-Convert Instructions",
                "id": "_narrowing_floating_pointinteger_type_convert_instructions",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Vector Reduction Operations",
            "id": "_vector_reduction_operations",
            "children": [
              {
                "title": "Vector Single-Width Integer Reduction Instructions",
                "id": "sec-vector-integer-reduce",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Widening Integer Reduction Instructions",
                "id": "sec-vector-integer-reduce-widen",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Single-Width Floating-Point Reduction Instructions",
                "id": "sec-vector-float-reduce",
                "children": [
                  {
                    "title": "Vector Ordered Single-Width Floating-Point Sum Reduction",
                    "id": "_vector_ordered_single_width_floating_point_sum_reduction",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Vector Unordered Single-Width Floating-Point Sum Reduction",
                    "id": "_vector_unordered_single_width_floating_point_sum_reduction",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Vector Single-Width Floating-Point Max and Min Reductions",
                    "id": "_vector_single_width_floating_point_max_and_min_reductions",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Widening Floating-Point Reduction Instructions",
                "id": "sec-vector-float-reduce-widen",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Vector Mask Instructions",
            "id": "sec-vector-mask",
            "children": [
              {
                "title": "Vector Mask-Register Logical Instructions",
                "id": "sec-mask-register-logical",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector count population in mask vcpop.m",
                "id": "_vector_count_population_in_mask_vcpop_m",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vfirst find-first-set mask bit",
                "id": "_vfirst_find_first_set_mask_bit",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vmsbf.m set-before-first mask bit",
                "id": "_vmsbf_m_set_before_first_mask_bit",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vmsif.m set-including-first mask bit",
                "id": "_vmsif_m_set_including_first_mask_bit",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vmsof.m set-only-first mask bit",
                "id": "_vmsof_m_set_only_first_mask_bit",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Example using vector mask instructions",
                "id": "_example_using_vector_mask_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Iota Instruction",
                "id": "_vector_iota_instruction",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Element Index Instruction",
                "id": "_vector_element_index_instruction",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Vector Permutation Instructions",
            "id": "sec-vector-permute",
            "children": [
              {
                "title": "Integer Scalar Move Instructions",
                "id": "_integer_scalar_move_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Floating-Point Scalar Move Instructions",
                "id": "sec-vector-float-move",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Slide Instructions",
                "id": "_vector_slide_instructions",
                "children": [
                  {
                    "title": "Vector Slide-up Instructions",
                    "id": "_vector_slide_up_instructions",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Vector Slide-down Instructions",
                    "id": "_vector_slide_down_instructions",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Vector Slide-1-up",
                    "id": "_vector_slide_1_up",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Vector Floating-Point Slide-1-up Instruction",
                    "id": "sec-vfslide1up",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Vector Slide-1-down Instruction",
                    "id": "_vector_slide_1_down_instruction",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Vector Floating-Point Slide-1-down Instruction",
                    "id": "sec-vfslide1down",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Register Gather Instructions",
                "id": "_vector_register_gather_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector Compress Instruction",
                "id": "_vector_compress_instruction",
                "children": [
                  {
                    "title": "Synthesizing vdecompress",
                    "id": "_synthesizing_vdecompress",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              },
              {
                "title": "Whole Vector Register Move",
                "id": "_whole_vector_register_move",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Exception Handling",
            "id": "_exception_handling",
            "children": [
              {
                "title": "Precise vector traps",
                "id": "_precise_vector_traps",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Imprecise vector traps",
                "id": "_imprecise_vector_traps",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Selectable precise/imprecise traps",
                "id": "_selectable_preciseimprecise_traps",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Swappable traps",
                "id": "_swappable_traps",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Standard Vector Extensions",
            "id": "sec-vector-extensions",
            "children": [
              {
                "title": "Zvl*: Minimum Vector Length Standard Extensions",
                "id": "_zvl_minimum_vector_length_standard_extensions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zve*: Vector Extensions for Embedded Processors",
                "id": "_zve_vector_extensions_for_embedded_processors",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "V: Vector Extension for Application Processors",
                "id": "_v_vector_extension_for_application_processors",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zvfhmin: Vector Extension for Minimal Half-Precision Floating-Point",
                "id": "_zvfhmin_vector_extension_for_minimal_half_precision_floating_point",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zvfh: Vector Extension for Half-Precision Floating-Point",
                "id": "_zvfh_vector_extension_for_half_precision_floating_point",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Vector Element Groups",
            "id": "vector-element-groups",
            "children": [
              {
                "title": "Element Group Size",
                "id": "_element_group_size",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Setting vl",
                "id": "_setting_vl",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Determining EEW",
                "id": "_determining_eew",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Determining EMUL",
                "id": "_determining_emul",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Element Group Width",
                "id": "_element_group_width",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Masking",
                "id": "_masking",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Vector Instruction Listing",
            "id": "_vector_instruction_listing",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "Cryptography Extensions: Scalar &amp; Entropy Source Instructions, Version 1.0.1",
        "id": "crypto_scalar_instructions",
        "children": [
          {
            "title": "Introduction",
            "id": "crypto_scalar_introduction",
            "children": [
              {
                "title": "Intended Audience",
                "id": "crypto_scalar_audience",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Sail Specifications",
                "id": "crypto_scalar_sail_specifications",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Policies",
                "id": "crypto_scalar_policies",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Extensions Overview",
            "id": "crypto_scalar_extensions",
            "children": [
              {
                "title": "Zbkb - Bitmanip instructions for Cryptography",
                "id": "zbkb-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zbkc - Carry-less multiply instructions",
                "id": "zbkc-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zbkx - Crossbar permutation instructions",
                "id": "zbkx-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zknd - NIST Suite: AES Decryption",
                "id": "zknd",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zkne - NIST Suite: AES Encryption",
                "id": "zkne",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zknh - NIST Suite: Hash Function Instructions",
                "id": "zknh",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zksed - ShangMi Suite: SM4 Block Cipher Instructions",
                "id": "zksed",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zksh - ShangMi Suite: SM3 Hash Function Instructions",
                "id": "zksh",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zkr - Entropy Source Extension",
                "id": "zkr",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zkn - NIST Algorithm Suite",
                "id": "zkn",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zks - ShangMi Algorithm Suite",
                "id": "zks",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zk - Standard scalar cryptography extension",
                "id": "zk",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zkt - Data Independent Execution Latency",
                "id": "_zkt_data_independent_execution_latency",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Instructions",
            "id": "crypto_scalar_insns",
            "children": [
              {
                "title": "aes32dsi",
                "id": "insns-aes32dsi",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "aes32dsmi",
                "id": "insns-aes32dsmi",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "aes32esi",
                "id": "insns-aes32esi",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "aes32esmi",
                "id": "insns-aes32esmi",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "aes64ds",
                "id": "insns-aes64ds",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "aes64dsm",
                "id": "insns-aes64dsm",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "aes64es",
                "id": "insns-aes64es",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "aes64esm",
                "id": "insns-aes64esm",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "aes64im",
                "id": "insns-aes64im",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "aes64ks1i",
                "id": "insns-aes64ks1i",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "aes64ks2",
                "id": "insns-aes64ks2",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "andn",
                "id": "insns-andn-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "brev8",
                "id": "insns-brev8-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "clmul",
                "id": "insns-clmul-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "clmulh",
                "id": "insns-clmulh-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "orn",
                "id": "insns-orn-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "pack",
                "id": "insns-pack-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "packh",
                "id": "insns-packh-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "packw",
                "id": "insns-packw-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "rev8",
                "id": "insns-rev8-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "rol",
                "id": "insns-rol-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "rolw",
                "id": "insns-rolw-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "ror",
                "id": "insns-ror-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "rori",
                "id": "insns-rori-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "roriw",
                "id": "insns-roriw-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "rorw",
                "id": "insns-rorw-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sha256sig0",
                "id": "insns-sha256sig0",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sha256sig1",
                "id": "insns-sha256sig1",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sha256sum0",
                "id": "insns-sha256sum0",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sha256sum1",
                "id": "insns-sha256sum1",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sha512sig0h",
                "id": "insns-sha512sig0h",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sha512sig0l",
                "id": "insns-sha512sig0l",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sha512sig1h",
                "id": "insns-sha512sig1h",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sha512sig1l",
                "id": "insns-sha512sig1l",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sha512sum0r",
                "id": "insns-sha512sum0r",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sha512sum1r",
                "id": "insns-sha512sum1r",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sha512sig0",
                "id": "insns-sha512sig0",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sha512sig1",
                "id": "insns-sha512sig1",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sha512sum0",
                "id": "insns-sha512sum0",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sha512sum1",
                "id": "insns-sha512sum1",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sm3p0",
                "id": "insns-sm3p0",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sm3p1",
                "id": "insns-sm3p1",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sm4ed",
                "id": "insns-sm4ed",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "sm4ks",
                "id": "insns-sm4ks",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "unzip",
                "id": "insns-unzip-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "xnor",
                "id": "insns-xnor-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "xperm8",
                "id": "insns-xperm8-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "xperm4",
                "id": "insns-xperm4-sc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "zip",
                "id": "insns-zip-sc",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Entropy Source",
            "id": "crypto_scalar_es",
            "children": [
              {
                "title": "The seed CSR",
                "id": "crypto_scalar_seed_csr",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Entropy Source Requirements",
                "id": "crypto_scalar_es_req",
                "children": [
                  {
                    "title": "NIST SP 800-90B / FIPS 140-3 Requirements",
                    "id": "crypto_scalar_es_req_90b",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "BSI AIS-31 PTG.2 / Common Criteria Requirements",
                    "id": "crypto_scalar_es_req_ptg2",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Virtual Sources: Security Requirement",
                    "id": "crypto_scalar_es_req_virt",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              },
              {
                "title": "Access Control to seed",
                "id": "crypto_scalar_es_access",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Data Independent Execution Latency Subset: Zkt",
            "id": "crypto_scalar_zkt",
            "children": [
              {
                "title": "Scope and Goal",
                "id": "_scope_and_goal",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Background",
                "id": "_background",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Specific Instruction Rationale",
                "id": "_specific_instruction_rationale",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Programming Information",
                "id": "_programming_information",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zkt listings",
                "id": "_zkt_listings",
                "children": [
                  {
                    "title": "RVI (Base Instruction Set)",
                    "id": "_rvi_base_instruction_set",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "RVM (Multiply)",
                    "id": "_rvm_multiply",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "RVC (Compressed)",
                    "id": "_rvc_compressed",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Zcb Extension",
                    "id": "_zcb_extension",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "RVK (Scalar Cryptography)",
                    "id": "_rvk_scalar_cryptography",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "RVB (Bitmanip)",
                    "id": "_rvb_bitmanip",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Instruction Rationale",
            "id": "crypto_scalar_appx_rationale",
            "children": [
              {
                "title": "AES Instructions",
                "id": "_aes_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "SHA2 Instructions",
                "id": "_sha2_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "SM3 and SM4 Instructions",
                "id": "_sm3_and_sm4_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Bitmanip Instructions for Cryptography",
                "id": "crypto_scalar_zkb",
                "children": [
                  {
                    "title": "Rotations",
                    "id": "_rotations",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Bit &amp; Byte Permutations",
                    "id": "_bit_byte_permutations",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Carry-less Multiply",
                    "id": "_carry_less_multiply",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Logic With Negate",
                    "id": "_logic_with_negate",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Packing",
                    "id": "_packing",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Crossbar Permutation Instructions",
                    "id": "_crossbar_permutation_instructions",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Entropy Source Rationale and Recommendations",
            "id": "crypto_scalar_appx_es",
            "children": [
              {
                "title": "Checklists for Design and Self-Certification",
                "id": "_checklists_for_design_and_self_certification",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Standards and Terminology",
                "id": "_standards_and_terminology",
                "children": [
                  {
                    "title": "Entropy Source (ES)",
                    "id": "crypto_scalar_appx_es_intro-es",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Conditioning: Cryptographic and Non-Cryptographic",
                    "id": "crypto_scalar_appx_es_intro-cond",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Pseudorandom Number Generator (PRNG)",
                    "id": "crypto_scalar_appx_es_intro-prng",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Deterministic Random Bit Generator (DRBG)",
                    "id": "crypto_scalar_appx_es_intro-drbg",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              },
              {
                "title": "Specific Rationale and Considerations",
                "id": "_specific_rationale_and_considerations",
                "children": [
                  {
                    "title": "The seed CSR",
                    "id": "_the_seed_csr",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "NIST SP 800-90B",
                    "id": "_nist_sp_800_90b",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "BSI AIS-31",
                    "id": "_bsi_ais_31",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Virtual Sources",
                    "id": "_virtual_sources",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Security Considerations for Direct Hardware Access",
                    "id": "crypto_scalar_appx_es_access",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              },
              {
                "title": "Security Controls and Health Tests",
                "id": "crypto_scalar_es_security_controls",
                "children": [
                  {
                    "title": "T1: On-demand testing",
                    "id": "_t1_on_demand_testing",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "T2: Continuous checks",
                    "id": "_t2_continuous_checks",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "T3: Fatal error states",
                    "id": "_t3_fatal_error_states",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Information Flows",
                    "id": "_information_flows",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              },
              {
                "title": "Implementation Strategies",
                "id": "crypto_scalar_appx_es_implementation",
                "children": [
                  {
                    "title": "Ring Oscillators",
                    "id": "crypto_scalar_appx_es_noise_sources",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Shot Noise",
                    "id": "_shot_noise",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Other types of noise",
                    "id": "_other_types_of_noise",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Continuous Health Tests",
                    "id": "crypto_scalar_appx_es_cont-tests",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Non-cryptographic Conditioners",
                    "id": "crypto_scalar_appx_es_noncrypto",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Cryptographic Conditioners",
                    "id": "crypto_scalar_appx_es_crypto-cond",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "The Final Random: DRBGs",
                    "id": "crypto_scalar_appx_es_drbgs",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Quantum vs. Classical Random",
                    "id": "crypto_scalar_appx_es_quantum",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Post-Quantum Cryptography",
                    "id": "_post_quantum_cryptography",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              },
              {
                "title": "Suggested GetNoise Test Interface",
                "id": "crypto_scalar_es_getnoise",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Supplementary Materials",
            "id": "crypto_scalar_appx_materials",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Supporting Sail Code",
            "id": "crypto_scalar_appx_sail",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "Cryptography Extensions: Vector Instructions, Version 1.0",
        "id": "_cryptography_extensions_vector_instructions_version_1_0",
        "children": [
          {
            "title": "Introduction",
            "id": "crypto_vector_introduction",
            "children": [
              {
                "title": "Intended Audience",
                "id": "crypto_vector_audience",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Sail Specifications",
                "id": "crypto_vector_sail_specifications",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Policies",
                "id": "crypto_vector_policies",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Element Groups",
                "id": "crypto-vector-element-groups",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Instruction Constraints",
                "id": "crypto-vector-instruction-constraints",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Vector-Scalar Instructions",
                "id": "crypto-vector-scalar-instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Software Portability",
                "id": "crypto-vector-software-portability",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Extensions Overview",
            "id": "crypto_vector_extensions",
            "children": [
              {
                "title": "Zvbb - Vector Basic Bit-manipulation",
                "id": "zvbb",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zvbc - Vector Carryless Multiplication",
                "id": "zvbc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zvkb - Vector Cryptography Bit-manipulation",
                "id": "zvkb",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zvkg - Vector GCM/GMAC",
                "id": "zvkg",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zvkned - NIST Suite: Vector AES Block Cipher",
                "id": "zvkned",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zvknh[ab] - NIST Suite: Vector SHA-2 Secure Hash",
                "id": "zvknh",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zvksed - ShangMi Suite: SM4 Block Cipher",
                "id": "zvksed",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zvksh - ShangMi Suite: SM3 Secure Hash",
                "id": "zvksh",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zvkn - NIST Algorithm Suite",
                "id": "zvkn",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zvknc - NIST Algorithm Suite with carryless multiply",
                "id": "zvknc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zvkng - NIST Algorithm Suite with GCM",
                "id": "zvkng",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zvks - ShangMi Algorithm Suite",
                "id": "zvks",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zvksc - ShangMi Algorithm Suite with carryless multiplication",
                "id": "zvksc",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zvksg - ShangMi Algorithm Suite with GCM",
                "id": "zvksg",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zvkt - Vector Data-Independent Execution Latency",
                "id": "zvkt",
                "children": [
                  {
                    "title": "All   instructions",
                    "id": "_all_instructions",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "All  instructions",
                    "id": "_all_instructions_2",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "add/sub",
                    "id": "_addsub",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "add/sub with carry",
                    "id": "_addsub_with_carry",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "compare and set",
                    "id": "_compare_and_set",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "copy",
                    "id": "_copy",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "extend",
                    "id": "_extend",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "logical",
                    "id": "_logical",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "multiply",
                    "id": "_multiply",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "multiply-add",
                    "id": "_multiply_add",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Integer Merge",
                    "id": "_integer_merge",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "permute",
                    "id": "_permute",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "shift",
                    "id": "_shift",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "slide",
                    "id": "_slide",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Instructions",
            "id": "crypto_vector_insns",
            "children": [
              {
                "title": "vaesdf.[vv,vs]",
                "id": "insns-vaesdf",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vaesdm.[vv,vs]",
                "id": "insns-vaesdm",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vaesef.[vv,vs]",
                "id": "insns-vaesef",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vaesem.[vv,vs]",
                "id": "insns-vaesem",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vaeskf1.vi",
                "id": "insns-vaeskf1",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vaeskf2.vi",
                "id": "insns-vaeskf2",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vaesz.vs",
                "id": "insns-vaesz",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vandn.[vv,vx]",
                "id": "insns-vandn",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vbrev.v",
                "id": "insns-vbrev",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vbrev8.v",
                "id": "insns-vbrev8",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vclmul.[vv,vx]",
                "id": "insns-vclmul",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vclmulh.[vv,vx]",
                "id": "insns-vclmulh",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vclz.v",
                "id": "insns-vclz",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vcpop.v",
                "id": "insns-vcpop",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vctz.v",
                "id": "insns-vctz",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vghsh.vv",
                "id": "insns-vghsh",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vgmul.vv",
                "id": "insns-vgmul",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vrev8.v",
                "id": "insns-vrev8",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vrol.[vv,vx]",
                "id": "insns-vrol",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vror.[vv,vx,vi]",
                "id": "insns-vror",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vsha2c[hl].vv",
                "id": "insns-vsha2c",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vsha2ms.vv",
                "id": "insns-vsha2ms",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vsm3c.vi",
                "id": "insns-vsm3c",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vsm3me.vv",
                "id": "insns-vsm3me",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vsm4k.vi",
                "id": "insns-vsm4k",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vsm4r.[vv,vs]",
                "id": "insns-vsm4r",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "vwsll.[vv,vx,vi]",
                "id": "insns-vwsll",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Crypto Vector Cryptographic Instructions",
            "id": "crypto_vector_instructions",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Vector Bitmanip and Carryless Multiply Instructions",
            "id": "crypto_vector_instructions_Zvbb_Zvbc",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Supporting Sail Code",
            "id": "crypto_vector_appx_sail",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "Control-flow Integrity (CFI)",
        "id": "_control_flow_integrity_cfi",
        "children": [
          {
            "title": "Landing Pad (Zicfilp)",
            "id": "unpriv-forward",
            "children": [
              {
                "title": "Landing Pad Enforcement",
                "id": "_landing_pad_enforcement",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Landing Pad Instruction",
                "id": "LP_INST",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Shadow Stack (Zicfiss)",
            "id": "unpriv-backward",
            "children": [
              {
                "title": "Zicfiss Instructions Summary",
                "id": "_zicfiss_instructions_summary",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Shadow Stack Pointer (ssp)",
                "id": "_shadow_stack_pointer_ssp",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Zicfiss Instructions",
                "id": "_zicfiss_instructions",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Push to the Shadow Stack",
                "id": "SS_PUSH",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Pop from the Shadow Stack",
                "id": "SS_POP",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Read ssp into a Register",
                "id": "SSP_READ",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Atomic Swap from a Shadow Stack Location",
                "id": "SSAMOSWAP",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "\"Zilsd\", \"Zclsd\" Extensions for Load/Store pair for RV32, Version 1.0",
        "id": "sec:zilsd",
        "children": [
          {
            "title": "Load/Store pair instructions (Zilsd)",
            "id": "zilsd",
            "children": [

            ],
            "tags": [
              "norm:Zilsd_align8_no_exc",
              "norm:Zilsd_align8_atomic_unknown",
              "norm:Zilsd_align4_atomic",
              "norm:Zilsd_ld_resume_trap"
            ]
          },
          {
            "title": "Compressed Load/Store pair instructions (Zclsd)",
            "id": "zclsd",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Use of x0 as operand",
            "id": "_use_of_x0_as_operand",
            "children": [

            ],
            "tags": [
              "norm:Zilsd_ld_x0",
              "norm:Zilsd_sd_x0"
            ]
          },
          {
            "title": "Exception Handling",
            "id": "_exception_handling_2",
            "children": [

            ],
            "tags": [
              "norm:Zilsd_RVWMO_exc_misaligned",
              "norm:Zilsd_align4_two_4byte"
            ]
          },
          {
            "title": "Instructions",
            "id": "_instructions",
            "children": [
              {
                "title": "ld",
                "id": "insns-ld",
                "children": [

                ],
                "tags": [
                  "norm:Zilsd_ld_op"
                ]
              },
              {
                "title": "sd",
                "id": "insns-sd",
                "children": [

                ],
                "tags": [
                  "norm:Zilsd_sd_op"
                ]
              },
              {
                "title": "c.ldsp",
                "id": "insns-cldsp",
                "children": [

                ],
                "tags": [
                  "norm:c-ldsp_op"
                ]
              },
              {
                "title": "c.sdsp",
                "id": "insns-csdsp",
                "children": [

                ],
                "tags": [
                  "norm:c-sdsp_op"
                ]
              },
              {
                "title": "c.ld",
                "id": "insns-cld",
                "children": [

                ],
                "tags": [
                  "norm:c-ld_op"
                ]
              },
              {
                "title": "c.sd",
                "id": "insns-csd",
                "children": [

                ],
                "tags": [
                  "norm:c-sd_op"
                ]
              }
            ],
            "tags": [

            ]
          }
        ],
        "tags": [
          "norm:Zilsd_reg_pairs",
          "norm:Zilsd_bits_to_pair"
        ]
      },
      {
        "title": "RV32/64G Instruction Set Listings",
        "id": "rv32-64g",
        "children": [

        ],
        "tags": [

        ]
      },
      {
        "title": "ISA Extension Naming Conventions",
        "id": "naming",
        "children": [
          {
            "title": "Case Sensitivity",
            "id": "_case_sensitivity",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Base Integer ISA",
            "id": "_base_integer_isa",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Instruction-Set Extension Names",
            "id": "_instruction_set_extension_names",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Underscores",
            "id": "_underscores",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Additional Standard Unprivileged Extension Names",
            "id": "_additional_standard_unprivileged_extension_names",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Supervisor-level Instruction-Set Extension Names",
            "id": "_supervisor_level_instruction_set_extension_names",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Hypervisor-level Instruction-Set Extension Names",
            "id": "_hypervisor_level_instruction_set_extension_names",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Machine-level Instruction-Set Extension Names",
            "id": "_machine_level_instruction_set_extension_names",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Non-Standard Extension Names",
            "id": "_non_standard_extension_names",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Version Numbers",
            "id": "_version_numbers",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Subset Naming Convention",
            "id": "_subset_naming_convention",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "RVWMO Explanatory Material, Version 0.1",
        "id": "_rvwmo_explanatory_material_version_0_1",
        "children": [
          {
            "title": "Why RVWMO?",
            "id": "whyrvwmo",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Litmus Tests",
            "id": "litmustests",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Explaining the RVWMO Rules",
            "id": "_explaining_the_rvwmo_rules",
            "children": [
              {
                "title": "Preserved Program Order and Global Memory Order",
                "id": "_preserved_program_order_and_global_memory_order",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Load value axiom",
                "id": "loadvalueaxiom",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Atomicity axiom",
                "id": "atomicityaxiom",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Progress axiom",
                "id": "mm-progress",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Overlapping-Address Orderings (Rules 1-3)",
                "id": "mm-overlap",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Fences (Rule 4)",
                "id": "mm-fence",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Explicit Synchronization (Rules 5-8)",
                "id": "sec:memory:acqrel",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Syntactic Dependencies (Rules 9-11)",
                "id": "sec:memory:dependencies",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Pipeline Dependencies (Rules 12-13)",
                "id": "memory-ppopipeline",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Beyond Main Memory",
            "id": "_beyond_main_memory",
            "children": [
              {
                "title": "Coherence and Cacheability",
                "id": "_coherence_and_cacheability",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "I/O Ordering",
                "id": "_io_ordering",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Code Porting and Mapping Guidelines",
            "id": "memory_porting",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Implementation Guidelines",
            "id": "_implementation_guidelines",
            "children": [
              {
                "title": "Possible Future Extensions",
                "id": "_possible_future_extensions",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          },
          {
            "title": "Known Issues",
            "id": "discrepancies",
            "children": [
              {
                "title": "Mixed-size RSW",
                "id": "mixedrsw",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "Formal Memory Model Specifications, Version 0.1",
        "id": "_formal_memory_model_specifications_version_0_1",
        "children": [
          {
            "title": "Formal Axiomatic Specification in Alloy",
            "id": "alloy",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Formal Axiomatic Specification in Herd",
            "id": "sec:herd",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "An Operational Memory Model",
            "id": "operational",
            "children": [
              {
                "title": "Intra-instruction Pseudocode Execution",
                "id": "pseudocode_exec",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Instruction Instance State",
                "id": "inst_state",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Hart State",
                "id": "_hart_state",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Shared Memory State",
                "id": "_shared_memory_state",
                "children": [

                ],
                "tags": [

                ]
              },
              {
                "title": "Transitions",
                "id": "transitions",
                "children": [
                  {
                    "title": "Fetch instruction",
                    "id": "fetch",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Initiate memory load operations",
                    "id": "initiate_load",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Satisfy memory load operation by forwarding from unpropagated stores",
                    "id": "sat_by_forwarding",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Satisfy memory load operation from memory",
                    "id": "sat_from_mem",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Complete load operations",
                    "id": "complete_loads",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Early sc fail",
                    "id": "early_sc_fail",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Paired sc",
                    "id": "paired_sc",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Initiate memory store operation footprints",
                    "id": "initiate_store_footprint",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Instantiate memory store operation values",
                    "id": "instantiate_store_value",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Commit store instruction",
                    "id": "commit_stores",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Propagate store operation",
                    "id": "prop_store",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Commit and propagate store operation of an sc",
                    "id": "commit_sc",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Late sc fail",
                    "id": "late_sc_fail",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Complete store operations",
                    "id": "complete_stores",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Satisfy, commit and propagate operations of an AMO",
                    "id": "do_amo",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Commit fence",
                    "id": "commit_fence",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Register read",
                    "id": "reg_read",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Register write",
                    "id": "reg_write",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Pseudocode internal step",
                    "id": "sail_interp",
                    "children": [

                    ],
                    "tags": [

                    ]
                  },
                  {
                    "title": "Finish instruction",
                    "id": "finish",
                    "children": [

                    ],
                    "tags": [

                    ]
                  }
                ],
                "tags": [

                ]
              },
              {
                "title": "Limitations",
                "id": "limitations",
                "children": [

                ],
                "tags": [

                ]
              }
            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "Vector Assembly Code Examples",
        "id": "_vector_assembly_code_examples",
        "children": [
          {
            "title": "Vector-vector add example",
            "id": "_vector_vector_add_example",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Example with mixed-width mask and compute.",
            "id": "_example_with_mixed_width_mask_and_compute",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Memcpy example",
            "id": "_memcpy_example",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Conditional example",
            "id": "_conditional_example",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "SAXPY example",
            "id": "_saxpy_example",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "SGEMM example",
            "id": "_sgemm_example",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Division approximation example",
            "id": "_division_approximation_example",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Square root approximation example",
            "id": "_square_root_approximation_example",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "C standard library strcmp example",
            "id": "_c_standard_library_strcmp_example",
            "children": [

            ],
            "tags": [

            ]
          },
          {
            "title": "Fractional Lmul example",
            "id": "_fractional_lmul_example",
            "children": [

            ],
            "tags": [

            ]
          }
        ],
        "tags": [

        ]
      },
      {
        "title": "Calling Convention for Vector State (Not authoritative - Placeholder Only)",
        "id": "_calling_convention_for_vector_state_not_authoritative_placeholder_only",
        "children": [

        ],
        "tags": [

        ]
      },
      {
        "title": "Index",
        "id": "_index",
        "children": [

        ],
        "tags": [

        ]
      },
      {
        "title": "Bibliography",
        "id": "_bibliography_2",
        "children": [

        ],
        "tags": [

        ]
      }
    ],
    "tags": [

    ]
  }
}